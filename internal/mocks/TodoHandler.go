// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// TodoHandler is an autogenerated mock type for the TodoHandler type
type TodoHandler struct {
	mock.Mock
}

// CreateTodo provides a mock function with given fields: rw, r
func (_m *TodoHandler) CreateTodo(rw http.ResponseWriter, r *http.Request) {
	_m.Called(rw, r)
}

// GetTodoById provides a mock function with given fields: rw, r
func (_m *TodoHandler) GetTodoById(rw http.ResponseWriter, r *http.Request) {
	_m.Called(rw, r)
}

// GetTodos provides a mock function with given fields: rw, r
func (_m *TodoHandler) GetTodos(rw http.ResponseWriter, r *http.Request) {
	_m.Called(rw, r)
}

// UpdateTodoById provides a mock function with given fields: rw, r
func (_m *TodoHandler) UpdateTodoById(rw http.ResponseWriter, r *http.Request) {
	_m.Called(rw, r)
}

type mockConstructorTestingTNewTodoHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewTodoHandler creates a new instance of TodoHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTodoHandler(t mockConstructorTestingTNewTodoHandler) *TodoHandler {
	mock := &TodoHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
